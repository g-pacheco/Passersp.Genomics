levels(df$bolsa_modalidade <- sub("Doutorado pleno no exterior", "Doutorado Pleno", df$bolsa_modalidade))
levels(df$bolsa_modalidade <- sub("Pós-doutorado no exterior", "Pós-doutorado", df$bolsa_modalidade))
levels(df$bolsa_modalidade <- sub("Outra modalidade", "Outra Modalidade", df$bolsa_modalidade))
# Corrects Residência ~
levels(df$residencia <- sub("Resido no exterior", "Resido no Exterior", df$residencia))
# Corrects País ~
levels(df$pais <- sub("Holanda", "Países Baixos", df$pais))
# Corrects Estado ~
df$estado <- ifelse(df$estado %in% NA, "Prefiro não declarar", df$estado)
# Reorders Estado ~
df$estado <- factor(df$estado, ordered = T,
levels = c("AM", "BA", "CE", "DF", "GO", "MG", "MS", "MT", "PB", "PE",
"PR", "RJ", "RN", "RS", "SE", "SC", "SP",
"Já morava no país de destino",
"Morava em um terceiro país",
"Prefiro não declarar"))
# Reorders País ~
df$pais <- factor(df$pais, ordered = T,
levels = c("Alemanha", "Bélgica", "Canadá", "Dinamarca", "Espanha", "Estados Unidos",
"França", "Itália", "Países Baixos", "Portugal",
"Reino Unido", "Suécia", "Outro"))
# Reorders Modalidade da bolsa ~
df$bolsa_modalidade <- factor(df$bolsa_modalidade, ordered = T,
levels = c("Doutorado Sanduíche",
"Doutorado Pleno",
"Pós-doutorado",
"Outra Modalidade"))
# Bolsa Insuficiência ~
df_bolsa_insuf_estr <- df %>%
select(bolsa_insuf_estr, ID)  %>%
separate_rows(bolsa_insuf_estr, sep = " ,")
# Corrects bolsa_insuf_estr ~
levels(df_bolsa_insuf_estr$bolsa_insuf_estr <- sub(",Trabalhei", "\tTrabalhei", df_bolsa_insuf_estr$bolsa_insuf_estr))
levels(df_bolsa_insuf_estr$bolsa_insuf_estr <- sub(",Poupança", "\tPoupança", df_bolsa_insuf_estr$bolsa_insuf_estr))
levels(df_bolsa_insuf_estr$bolsa_insuf_estr <- sub(",Outras", "\tOutras", df_bolsa_insuf_estr$bolsa_insuf_estr))
levels(df_bolsa_insuf_estr$bolsa_insuf_estr <- sub(",Contei", "\tContei", df_bolsa_insuf_estr$bolsa_insuf_estr))
levels(df_bolsa_insuf_estr$bolsa_insuf_estr <- sub(",Usei", "\tUsei", df_bolsa_insuf_estr$bolsa_insuf_estr))
levels(df_bolsa_insuf_estr$bolsa_insuf_estr <- sub("a,Usei", "a\tUsei", df_bolsa_insuf_estr$bolsa_insuf_estr))
# Bolsa Insuficiência ~
df_bolsa_insuf_estr <- df_bolsa_insuf_estr %>%
separate_rows(bolsa_insuf_estr, sep = "\t")
# Reorders Bolsa Insuficiência ~
df_bolsa_insuf_estr$bolsa_insuf_estr <- factor(df_bolsa_insuf_estr$bolsa_insuf_estr, ordered = T,
levels = c("Trabalhei",
"Poupança",
"Fiz algum tipo de empréstimo",
"Contei com auxílio de familiares",
"Economizei com gastos básicos (comida, aluguel, etc) ",
"Usei auxílios governamentais ou da universidade Usei cartão de crédito, resultando em dívida financeira",
"Outras estratégias"))
View(df_bolsa_insuf_estr)
rm(list=ls())
# Loads packages ~
pacman::p_load(tidyverse, readxl, writexl, patchwork, cowplot, ggpubr, lemon, reshape2)
# Loads data ~
df <- read_excel("questionario_character.xlsx")[-1, ] %>%
filter(termo_consentimento == "Sim")
# Creates ID column ~
df <- cbind(ID = as.character(c(1:181)), df)
# Corrects Bolsa Modalidade ~
levels(df$bolsa_modalidade <- sub("Doutorado sanduíche", "Doutorado Sanduíche", df$bolsa_modalidade))
levels(df$bolsa_modalidade <- sub("Doutorado pleno no exterior", "Doutorado Pleno", df$bolsa_modalidade))
levels(df$bolsa_modalidade <- sub("Pós-doutorado no exterior", "Pós-doutorado", df$bolsa_modalidade))
levels(df$bolsa_modalidade <- sub("Outra modalidade", "Outra Modalidade", df$bolsa_modalidade))
# Corrects Residência ~
levels(df$residencia <- sub("Resido no exterior", "Resido no Exterior", df$residencia))
# Corrects País ~
levels(df$pais <- sub("Holanda", "Países Baixos", df$pais))
# Corrects Estado ~
df$estado <- ifelse(df$estado %in% NA, "Prefiro não declarar", df$estado)
# Reorders Estado ~
df$estado <- factor(df$estado, ordered = T,
levels = c("AM", "BA", "CE", "DF", "GO", "MG", "MS", "MT", "PB", "PE",
"PR", "RJ", "RN", "RS", "SE", "SC", "SP",
"Já morava no país de destino",
"Morava em um terceiro país",
"Prefiro não declarar"))
# Reorders País ~
df$pais <- factor(df$pais, ordered = T,
levels = c("Alemanha", "Bélgica", "Canadá", "Dinamarca", "Espanha", "Estados Unidos",
"França", "Itália", "Países Baixos", "Portugal",
"Reino Unido", "Suécia", "Outro"))
# Reorders Modalidade da bolsa ~
df$bolsa_modalidade <- factor(df$bolsa_modalidade, ordered = T,
levels = c("Doutorado Sanduíche",
"Doutorado Pleno",
"Pós-doutorado",
"Outra Modalidade"))
# Bolsa Insuficiência ~
df_bolsa_insuf_estr <- df %>%
select(bolsa_insuf_estr, ID)  %>%
separate_rows(bolsa_insuf_estr, sep = " ,")
# Corrects bolsa_insuf_estr ~
levels(df_bolsa_insuf_estr$bolsa_insuf_estr <- sub(",Trabalhei", "\tTrabalhei", df_bolsa_insuf_estr$bolsa_insuf_estr))
levels(df_bolsa_insuf_estr$bolsa_insuf_estr <- sub(",Poupança", "\tPoupança", df_bolsa_insuf_estr$bolsa_insuf_estr))
levels(df_bolsa_insuf_estr$bolsa_insuf_estr <- sub(",Outras", "\tOutras", df_bolsa_insuf_estr$bolsa_insuf_estr))
levels(df_bolsa_insuf_estr$bolsa_insuf_estr <- sub(",Contei", "\tContei", df_bolsa_insuf_estr$bolsa_insuf_estr))
levels(df_bolsa_insuf_estr$bolsa_insuf_estr <- sub(",Usei", "\tUsei", df_bolsa_insuf_estr$bolsa_insuf_estr))
levels(df_bolsa_insuf_estr$bolsa_insuf_estr <- sub("a,Usei", "a\tUsei", df_bolsa_insuf_estr$bolsa_insuf_estr))
# Bolsa Insuficiência ~
df_bolsa_insuf_estr <- df_bolsa_insuf_estr %>%
separate_rows(bolsa_insuf_estr, sep = "\t")
# Corrects bolsa_insuf_estr ~
levels(df_bolsa_insuf_estr$bolsa_insuf_estr <- sub("Economizei com gastos básicos (comida, aluguel, etc) ", "Economizei com gastos básicos (comida, aluguel, etc)", df_bolsa_insuf_estr$bolsa_insuf_estr))
# Reorders Bolsa Insuficiência ~
df_bolsa_insuf_estr$bolsa_insuf_estr <- factor(df_bolsa_insuf_estr$bolsa_insuf_estr, ordered = T,
levels = c("Trabalhei",
"Poupança",
"Fiz algum tipo de empréstimo",
"Contei com auxílio de familiares",
"Economizei com gastos básicos (comida, aluguel, etc) ",
"Usei auxílios governamentais ou da universidade Usei cartão de crédito, resultando em dívida financeira",
"Outras estratégias"))
View(df_bolsa_insuf_estr)
citation()
### The BEGINNING ~~~~~
##
# ~ Plots NLSparrow--evalAdmix | First written by Jose Samaniego with later modifications by George Pacheco.
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, reshape2, pheatmap, scales, optparse, plyr, RColorBrewer, extrafont, gtable, grid, mdthemes, ggtext, glue)
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, reshape2, pheatmap, scales, optparse, plyr, RColorBrewer, extrafont)
source("visFuns.R")
# Load data
Corres_2 <- as.matrix(read.table("AllSamples_bcftools.raw.vcf.Filtered.Autosomes.NoKinship.NoTreeSparrow.MAFfiltered.Pruned.K2.corres"))
Corres_3 <- as.matrix(read.table("AllSamples_bcftools.raw.vcf.Filtered.Autosomes.NoKinship.NoTreeSparrow.MAFfiltered.Pruned.K3.corres"))
Corres_4 <- as.matrix(read.table("AllSamples_bcftools.raw.vcf.Filtered.Autosomes.NoKinship.NoTreeSparrow.MAFfiltered.Pruned.K4.corres"))
Corres_5 <- as.matrix(read.table("AllSamples_bcftools.raw.vcf.Filtered.Autosomes.NoKinship.NoTreeSparrow.MAFfiltered.Pruned.K5.corres"))
Corres_6 <- as.matrix(read.table("AllSamples_bcftools.raw.vcf.Filtered.Autosomes.NoKinship.NoTreeSparrow.MAFfiltered.Pruned.K6.corres"))
Corres_7 <- as.matrix(read.table("AllSamples_bcftools.raw.vcf.Filtered.Autosomes.NoKinship.NoTreeSparrow.MAFfiltered.Pruned.K7.corres"))
# Imports data while incorporating annotation ~
corres <- list()
corresL <- dir(pattern = ".corres")
for (k in 1:length(corresL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))
colnames(corres[[k]]) <- c("Sample_ID")}
corres <- list()
corresL <- dir(pattern = ".corres")
for (k in 1:length(corresL)){
corres[[k]] <- as.matrix(read.table(corresL[k], as.is = TRUE))
colnames(corres[[k]]) <- "Sample_ID"}
corres <- list()
corresL <- dir(pattern = ".corres")
for (k in 1:length(corresL)){
corres[[k]] <- as.matrix(read.table(corresL[k], as.is = TRUE))
colnames(corres[[k]]) <- paste0("Column_", 1:ncol(corres[[k]]))}
View(corres)
# Expands list ~
fulldf <- bind_rows(corres)
class(corres)
# Expands list ~
fulldf <- bind_rows(corres)
corres[[k]] <- as.matrix(read.table(corresL[k]))}
# Imports data while incorporating annotation ~
corres <- list()
class(corres)
# Expands list ~
fulldf <- bind_rows(corres)
# Imports data while incorporating annotation ~
corres <- list()
corresL <- dir(pattern = ".corres")
for (k in 1:length(corresL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))}
# Expands list ~
fulldf <- bind_rows(corres)
View(corres)
# Expands list ~
fulldf <- bind_rows(corres)
corres <- list()
corresL <- dir(pattern = ".corres")
for (k in 1:length(corresL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))}
# Expands list ~
fulldf <- bind_rows(corres)
# Expands list ~
# Assuming 'list_of_matrices' is your list of matrices
corres_df <- lapply(corres, as.data.frame)
fulldf <- bind_rows(list_of_dataframes)
fulldf <- bind_rows(corres_df)
View(fulldf)
### The BEGINNING ~~~~~
##
# ~ Plots NLSparrow--evalAdmix | First written by Jose Samaniego with later modifications by George Pacheco.
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, reshape2, pheatmap, scales, optparse, plyr, RColorBrewer, extrafont)
source("visFuns.R")
# Load data
Corres_2 <- as.matrix(read.table("AllSamples_bcftools.raw.vcf.Filtered.Autosomes.NoKinship.NoTreeSparrow.MAFfiltered.Pruned.K2.corres"))
Corres_3 <- as.matrix(read.table("AllSamples_bcftools.raw.vcf.Filtered.Autosomes.NoKinship.NoTreeSparrow.MAFfiltered.Pruned.K3.corres"))
Corres_4 <- as.matrix(read.table("AllSamples_bcftools.raw.vcf.Filtered.Autosomes.NoKinship.NoTreeSparrow.MAFfiltered.Pruned.K4.corres"))
Corres_5 <- as.matrix(read.table("AllSamples_bcftools.raw.vcf.Filtered.Autosomes.NoKinship.NoTreeSparrow.MAFfiltered.Pruned.K5.corres"))
Corres_6 <- as.matrix(read.table("AllSamples_bcftools.raw.vcf.Filtered.Autosomes.NoKinship.NoTreeSparrow.MAFfiltered.Pruned.K6.corres"))
Corres_7 <- as.matrix(read.table("AllSamples_bcftools.raw.vcf.Filtered.Autosomes.NoKinship.NoTreeSparrow.MAFfiltered.Pruned.K7.corres"))
annot <- list()
### The BEGINNING ~~~~~
##
# ~ Plots NLSparrow--evalAdmix | First written by Jose Samaniego with later modifications by George Pacheco.
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, reshape2, pheatmap, scales, optparse, plyr, RColorBrewer, extrafont)
source("visFuns.R")
# Imports data while incorporating annotation ~
corres <- list()
annot <- list()
corresL <- dir(pattern = ".corres")
annotL <- dir(pattern = ".labels")
for (k in 1:length(corresL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))}
### The BEGINNING ~~~~~
##
# ~ Plots NLSparrow--evalAdmix | First written by Jose Samaniego with later modifications by George Pacheco.
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, reshape2, pheatmap, scales, optparse, plyr, RColorBrewer, extrafont)
source("visFuns.R")
# Imports data while incorporating annotation ~
corres <- list()
annot <- list()
corresL <- dir(pattern = ".corres")
annotL <- dir(pattern = ".labels")
for (k in 1:length(corresL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))
colnames(annot[[k]]) <- c("Sample_ID")
annot[[k]]$Population <- ifelse(grepl("FR0", annot[[k]]$Sample_ID), "Sales",
ifelse(grepl("KAZ", annot[[k]]$Sample_ID), "Chokpak",
ifelse(grepl("Lesina", annot[[k]]$Sample_ID), "Lesina",
ifelse(grepl("Crotone", annot[[k]]$Sample_ID), "Crotone",
ifelse(grepl("Guglionesi", annot[[k]]$Sample_ID), "Guglionesi",
ifelse(grepl("PI22NLD0001M", annot[[k]]$Sample_ID), "Y150239",
ifelse(grepl("PD22NLD0146F", annot[[k]]$Sample_ID), "Garderen",
ifelse(grepl("PD22NLD0147F", annot[[k]]$Sample_ID), "Garderen",
ifelse(grepl("PDOM2022NLD0077M", annot[[k]]$Sample_ID), "Meerkerk",
ifelse(grepl("PDOM2022NLD0", annot[[k]]$Sample_ID), "Utrecht", "Error"))))))))))}
corres <- list()
annot <- list()
corresL <- dir(pattern = ".corres")
annotL <- dir(pattern = ".labels")
for (k in 1:length(corresL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))
colnames(annot[[k]]) <- c("Sample_ID")
annot[[k]]$Population <- ifelse(grepl("FR0", annotL[[k]]$Sample_ID), "Sales",
ifelse(grepl("KAZ", annotL[[k]]$Sample_ID), "Chokpak",
ifelse(grepl("Lesina", annotL[[k]]$Sample_ID), "Lesina",
ifelse(grepl("Crotone", annotL[[k]]$Sample_ID), "Crotone",
ifelse(grepl("Guglionesi", annotL[[k]]$Sample_ID), "Guglionesi",
ifelse(grepl("PI22NLD0001M", annotL[[k]]$Sample_ID), "Y150239",
ifelse(grepl("PD22NLD0146F", annotL[[k]]$Sample_ID), "Garderen",
ifelse(grepl("PD22NLD0147F", annotL[[k]]$Sample_ID), "Garderen",
ifelse(grepl("PDOM2022NLD0077M", annotL[[k]]$Sample_ID), "Meerkerk",
ifelse(grepl("PDOM2022NLD0", annotL[[k]]$Sample_ID), "Utrecht", "Error"))))))))))}
### The BEGINNING ~~~~~
##
# ~ Plots NLSparrow--evalAdmix | First written by Jose Samaniego with later modifications by George Pacheco.
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, reshape2, pheatmap, scales, optparse, plyr, RColorBrewer, extrafont)
source("visFuns.R")
# Imports data while incorporating annotation ~
corres <- list()
annot <- list()
corresL <- dir(pattern = ".corres")
annotL <- dir(pattern = ".labels")
for (k in 1:length(corresL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))
colnames(annot[[k]]) <- c("Sample_ID")}
corres <- list()
annot <- list()
corresL <- dir(pattern = ".corres")
annotL <- dir(pattern = ".labels")
for (k in 1:length(corresL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))
colnames(annot[[k]]) <- c("Sample_ID")}
### The BEGINNING ~~~~~
##
# ~ Plots NLSparrow--evalAdmix | First written by Jose Samaniego with later modifications by George Pacheco.
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, reshape2, pheatmap, scales, optparse, plyr, RColorBrewer, extrafont)
source("visFuns.R")
# Imports data while incorporating annotation ~
corres <- list()
annot <- list()
corresL <- dir(pattern = ".corres")
annotL <- dir(pattern = ".labels")
for (k in 1:length(corresL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))}
corres <- list()
annot <- list()
corresL <- dir(pattern = ".corres")
annotL <- dir(pattern = ".labels")
for (k in 1:length(corresL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))
colnames(annot[[k]]) <- c("Sample_ID")}
colnames(annot[[k]]) <- c("Sample_ID", "Oi")}
corres <- list()
annot <- list()
corresL <- dir(pattern = ".corres")
annotL <- dir(pattern = ".labels")
for (k in 1:length(corresL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))
colnames(annot[[k]]) <- c("Sample_ID", "Oi")}
### The BEGINNING ~~~~~
##
# ~ Plots NLSparrow--evalAdmix | First written by Jose Samaniego with later modifications by George Pacheco.
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, reshape2, pheatmap, scales, optparse, plyr, RColorBrewer, extrafont)
source("visFuns.R")
# Imports data while incorporating annotation ~
corres <- list()
annot <- list()
corresL <- dir(pattern = ".corres")
annotL <- dir(pattern = ".labels")
for (k in 1:length(corresL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))
annot[[k]] <- read.table(annotL[k], sep = "\t", header = FALSE, stringsAsFactors = FALSE)
colnames(annot[[k]]) <- c("Sample_ID")
annot[[k]]$Population <- ifelse(grepl("FR0", annotL[[k]]$Sample_ID), "Sales",
ifelse(grepl("KAZ", annotL[[k]]$Sample_ID), "Chokpak",
ifelse(grepl("Lesina", annotL[[k]]$Sample_ID), "Lesina",
ifelse(grepl("Crotone", annotL[[k]]$Sample_ID), "Crotone",
ifelse(grepl("Guglionesi", annotL[[k]]$Sample_ID), "Guglionesi",
ifelse(grepl("PI22NLD0001M", annotL[[k]]$Sample_ID), "Y150239",
ifelse(grepl("PD22NLD0146F", annotL[[k]]$Sample_ID), "Garderen",
ifelse(grepl("PD22NLD0147F", annotL[[k]]$Sample_ID), "Garderen",
ifelse(grepl("PDOM2022NLD0077M", annotL[[k]]$Sample_ID), "Meerkerk",
ifelse(grepl("PDOM2022NLD0", annotL[[k]]$Sample_ID), "Utrecht", "Error"))))))))))}
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, reshape2, pheatmap, scales, optparse, plyr, RColorBrewer, extrafont)
source("visFuns.R")
# Imports data while incorporating annotation ~
corres <- list()
annot <- list()
corresL <- dir(pattern = ".corres")
annotL <- dir(pattern = ".labels")
for (k in 1:length(corresL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))
annot[[k]] <- read.table(annotL[k], sep = "\t", header = FALSE, stringsAsFactors = FALSE)
colnames(annot[[k]]) <- c("Sample_ID")
annot[[k]]$Population <- ifelse(grepl("FR0", annot[[k]]$Sample_ID), "Sales",
ifelse(grepl("KAZ", annot[[k]]$Sample_ID), "Chokpak",
ifelse(grepl("Lesina", annot[[k]]$Sample_ID), "Lesina",
ifelse(grepl("Crotone", annot[[k]]$Sample_ID), "Crotone",
ifelse(grepl("Guglionesi", annot[[k]]$Sample_ID), "Guglionesi",
ifelse(grepl("PI22NLD0001M", annot[[k]]$Sample_ID), "Y150239",
ifelse(grepl("PD22NLD0146F", annot[[k]]$Sample_ID), "Garderen",
ifelse(grepl("PD22NLD0147F", annot[[k]]$Sample_ID), "Garderen",
ifelse(grepl("PDOM2022NLD0077M", annot[[k]]$Sample_ID), "Meerkerk",
ifelse(grepl("PDOM2022NLD0", annot[[k]]$Sample_ID), "Utrecht", "Error"))))))))))}
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, reshape2, pheatmap, scales, optparse, plyr, RColorBrewer, extrafont)
source("visFuns.R")
# Imports data while incorporating annotation ~
corres <- list()
annot <- list()
corresL <- dir(pattern = ".corres")
annotL <- dir(pattern = ".labels")
for (k in 1:length(corresL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))
annot[[k]] <- read.table(annotL[k], sep = "\t", header = FALSE, stringsAsFactors = FALSE)
colnames(annot[[k]]) <- c("Sample_ID")}
corres <- list()
annot <- list()
corresL <- dir(pattern = ".corres")
annotL <- dir(pattern = ".labels")
for (k in 1:length(corresL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))
annot[[k]] <- read.table(annotL[k], sep = "\t", header = FALSE, stringsAsFactors = FALSE)}
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, reshape2, pheatmap, scales, optparse, plyr, RColorBrewer, extrafont)
source("visFuns.R")
# Imports data while incorporating annotation ~
corres <- list()
annot <- list()
corresL <- dir(pattern = ".corres")
annotL <- dir(pattern = ".labels")
for (k in 1:length(aanotL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))
annot[[k]] <- read.table(annotL[k], sep = "\t", header = FALSE, stringsAsFactors = FALSE)}
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, reshape2, pheatmap, scales, optparse, plyr, RColorBrewer, extrafont)
source("visFuns.R")
# Imports data while incorporating annotation ~
corres <- list()
annot <- list()
corresL <- dir(pattern = ".corres")
annotL <- dir(pattern = ".labels")
for (k in 1:length(annotL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))
annot[[k]] <- read.table(annotL[k], sep = "\t", header = FALSE, stringsAsFactors = FALSE)}
colnames(annot[[k]]) <- c("Sample_ID")}
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, reshape2, pheatmap, scales, optparse, plyr, RColorBrewer, extrafont)
source("visFuns.R")
# Imports data while incorporating annotation ~
corres <- list()
annot <- list()
corresL <- dir(pattern = ".corres")
annotL <- dir(pattern = ".labels")
for (k in 1:length(annotL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))
annot[[k]] <- read.table(annotL[k], sep = "\t", header = FALSE, stringsAsFactors = FALSE)}
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, reshape2, pheatmap, scales, optparse, plyr, RColorBrewer, extrafont)
source("visFuns.R")
# Imports data while incorporating annotation ~
corres <- list()
annot <- list()
corresL <- dir(pattern = ".corres")
annotL <- dir(pattern = ".labels")
for (k in 1:length(annotL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))
annot[[k]] <- read.table(annotL[k], sep = "\t", header = FALSE, stringsAsFactors = FALSE)
colnames(annot[[k]]) <- c("Sample_ID")}
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, reshape2, pheatmap, scales, optparse, plyr, RColorBrewer, extrafont)
source("visFuns.R")
# Imports data while incorporating annotation ~
corres <- list()
annot <- list()
corresL <- dir(pattern = ".corres")
annotL <- dir(pattern = ".labels")
for (k in 1:length(annotL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))
annot[[k]] <- read.table(annotL[k], sep = "\t", header = FALSE, stringsAsFactors = FALSE)
colnames(annot[[k]]) <- c("Sample_ID")
annot[[k]]$Population <- ifelse(grepl("FR0", annot[[k]]$Sample_ID), "Sales",
ifelse(grepl("KAZ", annot[[k]]$Sample_ID), "Chokpak",
ifelse(grepl("Lesina", annot[[k]]$Sample_ID), "Lesina",
ifelse(grepl("Crotone", annot[[k]]$Sample_ID), "Crotone",
ifelse(grepl("Guglionesi", annot[[k]]$Sample_ID), "Guglionesi",
ifelse(grepl("PI22NLD0001M", annot[[k]]$Sample_ID), "Y150239",
ifelse(grepl("PD22NLD0146F", annot[[k]]$Sample_ID), "Garderen",
ifelse(grepl("PD22NLD0147F", annot[[k]]$Sample_ID), "Garderen",
ifelse(grepl("PDOM2022NLD0077M", annot[[k]]$Sample_ID), "Meerkerk",
ifelse(grepl("PDOM2022NLD0", annot[[k]]$Sample_ID), "Utrecht", "Error"))))))))))}
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, reshape2, pheatmap, scales, optparse, plyr, RColorBrewer, extrafont)
source("visFuns.R")
# Imports data while incorporating annotation ~
corres <- list()
annot <- list()
corresL <- dir(pattern = ".corres")
annotL <- dir(pattern = ".labels")
for (k in 1:length(annotL)){
corres[[k]] <- as.matrix(read.table(corresL[k]))
annot[[k]] <- read.table(annotL[k], sep = "\t", header = FALSE, stringsAsFactors = FALSE)
colnames(annot[[k]]) <- c("Sample_ID")
annot[[k]]$Population <- ifelse(grepl("FR0", annot[[k]]$Sample_ID), "Sales",
ifelse(grepl("KAZ", annot[[k]]$Sample_ID), "Chokpak",
ifelse(grepl("Lesina", annot[[k]]$Sample_ID), "Lesina",
ifelse(grepl("Crotone", annot[[k]]$Sample_ID), "Crotone",
ifelse(grepl("Guglionesi", annot[[k]]$Sample_ID), "Guglionesi",
ifelse(grepl("PI22NLD0001M", annot[[k]]$Sample_ID), "Y150239",
ifelse(grepl("PD22NLD0146F", annot[[k]]$Sample_ID), "Garderen",
ifelse(grepl("PD22NLD0147F", annot[[k]]$Sample_ID), "Garderen",
ifelse(grepl("PDOM2022NLD0077M", annot[[k]]$Sample_ID), "Meerkerk",
ifelse(grepl("PDOM2022NLD0", annot[[k]]$Sample_ID), "Utrecht", "Error"))))))))))}
